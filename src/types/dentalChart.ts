// ๐ฆท Enhanced Dental Chart System Types
// ูุธุงู ูุฎุทุท ุงูุฃุณูุงู ุงููุญุณู - ุฃููุงุน ุงูุจูุงูุงุช

export interface ToothRecord {
  id: string;
  tooth_number: string;
  patient_id: string;
  clinic_id: string;
  
  // ุชุจููุจ ุงูุชุดุฎูุต
  diagnosis: {
    primary_condition: ConditionType;
    priority_level: PriorityLevel;
    icd10_code?: string;
    diagnosis_notes?: string;
    image_url?: string;
    image_data?: string;
  };
  
  // ุชุจููุจ ุงูุฃุณุทุญ
  surfaces: {
    mesial: SurfaceCondition;
    distal: SurfaceCondition;
    buccal: SurfaceCondition;
    lingual: SurfaceCondition;
    occlusal: SurfaceCondition;
    incisal: SurfaceCondition;
  };
  
  // ุชุจููุจ ุงูููุงุณุงุช ุงูุณุฑูุฑูุฉ
  clinical_measurements: {
    mobility: number; // 0-3
    pocket_depths: {
      mesial_buccal: number;
      mid_buccal: number;
      distal_buccal: number;
      mesial_lingual: number;
      mid_lingual: number;
      distal_lingual: number;
    };
    bleeding_on_probing: boolean;
    gingival_recession: {
      buccal: number;
      lingual: number;
    };
    plaque_index: number; // 0-3
  };
  
  // ุชุจููุจ ุงูุฌุฐูุฑ
  roots: {
    number_of_roots: number; // 1-4
    root_conditions: RootCondition[];
    root_canal_treatment: {
      completed: boolean;
      date?: string;
      notes?: string;
    };
  };
  
  // ุชุจููุจ ุงูููุงุญุธุงุช
  notes: {
    clinical_notes: string;
    treatment_plan: string;
    additional_comments: string;
    follow_up_date?: string;
  };
  
  created_at: string;
  updated_at: string;
}

export enum ConditionType {
  SOUND = 'sound',
  DECAY = 'decay',
  FILLED = 'filled',
  CROWN = 'crown',
  MISSING = 'missing',
  ROOT_CANAL = 'root_canal',
  IMPLANT = 'implant',
  BRIDGE = 'bridge',
  VENEER = 'veneer',
  ORTHODONTIC = 'orthodontic',
  FRACTURED = 'fractured',
  IMPACTED = 'impacted',
  EXTRACTED = 'extracted',
  NEEDS_TREATMENT = 'needs_treatment'
}

export enum PriorityLevel {
  LOW = 'low',
  MEDIUM = 'medium',
  HIGH = 'high',
  URGENT = 'urgent',
  EMERGENCY = 'emergency'
}

export enum SurfaceCondition {
  SOUND = 'sound',
  DECAY = 'decay',
  RESTORATION = 'restoration',
  FRACTURE = 'fracture',
  WEAR = 'wear',
  STAIN = 'stain',
  PLAQUE = 'plaque',
  CALCULUS = 'calculus'
}

export interface RootCondition {
  root_number: number;
  condition: 'healthy' | 'infected' | 'treated' | 'fractured' | 'resorbed';
  notes?: string;
}

export enum ToothNumberingSystem {
  FDI = 'fdi',          // ุงููุธุงู ุงูุฏููู (18, 17, 16...)
  UNIVERSAL = 'universal', // ุงููุธุงู ุงูุฃูุฑููู (1, 2, 3...)
  PALMER = 'palmer',    // ูุธุงู ุจุงููุฑ
  ARABIC = 'arabic'     // ุงูุชุฑููู ุงูุนุฑุจู ุงูุชูููุฏู
}

export interface ToothLayout {
  upperRight: string[];
  upperLeft: string[];
  lowerRight: string[];
  lowerLeft: string[];
}

export interface DentalChartProps {
  patientId: string;
  clinicId: string;
  onToothSelect?: (toothNumber: string) => void;
  selectedTooth?: string;
  numberingSystem?: ToothNumberingSystem;
  readOnly?: boolean;
}

export interface ToothModalProps {
  isOpen: boolean;
  onClose: () => void;
  toothNumber: string;
  patientId: string;
  clinicId: string;
  onSave: (data: ToothRecord) => void;
}

export interface ImageUploadProps {
  onImageSelect: (imageData: string) => void;
  currentImage?: string;
  maxSize?: number; // ุจุงูููุฌุงุจุงูุช
  acceptedFormats?: string[];
}

// WHO Color Standards
export const WHO_COLORS = {
  [ConditionType.SOUND]: '#22c55e',        // ุฃุฎุถุฑ - ุณููู
  [ConditionType.DECAY]: '#ef4444',        // ุฃุญูุฑ - ุชุณูุณ
  [ConditionType.FILLED]: '#3b82f6',       // ุฃุฒุฑู - ูุญุดู
  [ConditionType.CROWN]: '#f59e0b',        // ุจุฑุชูุงูู - ุชุงุฌ
  [ConditionType.MISSING]: '#6b7280',      // ุฑูุงุฏู - ููููุฏ
  [ConditionType.ROOT_CANAL]: '#8b5cf6',   // ุจููุณุฌู - ุนูุงุฌ ุนุตุจ
  [ConditionType.IMPLANT]: '#06b6d4',      // ุณูุงูู - ุฒุฑุงุนุฉ
  [ConditionType.BRIDGE]: '#f97316',       // ุจุฑุชูุงูู ุฏุงูู - ุฌุณุฑ
  [ConditionType.VENEER]: '#ec4899',       // ูุฑุฏู - ูุดุฑุฉ
  [ConditionType.ORTHODONTIC]: '#84cc16',  // ุฃุฎุถุฑ ูุงุชุญ - ุชูููู
  [ConditionType.FRACTURED]: '#dc2626',    // ุฃุญูุฑ ุฏุงูู - ูุณุฑ
  [ConditionType.IMPACTED]: '#7c3aed',     // ุจููุณุฌู ุฏุงูู - ููุทูุฑ
  [ConditionType.EXTRACTED]: '#374151',    // ุฑูุงุฏู ุฏุงูู - ููููุน
  [ConditionType.NEEDS_TREATMENT]: '#fbbf24' // ุฃุตูุฑ - ูุญุชุงุฌ ุนูุงุฌ
};

// ICD-10 Dental Codes
export const ICD10_DENTAL_CODES = {
  [ConditionType.DECAY]: 'K02',
  [ConditionType.FILLED]: 'Z87.891',
  [ConditionType.MISSING]: 'K08.1',
  [ConditionType.FRACTURED]: 'S02.5',
  [ConditionType.ROOT_CANAL]: 'Z98.811'
};

// Tooth Position Mapping
export const TOOTH_POSITIONS = {
  // ุงููู ุงูุนููู
  18: 'ุงูุทุงุญู ุงูุซุงูุซ ุงูุฃููู ุงูุนููู',
  17: 'ุงูุทุงุญู ุงูุซุงูู ุงูุฃููู ุงูุนููู',
  16: 'ุงูุทุงุญู ุงูุฃูู ุงูุฃููู ุงูุนููู',
  15: 'ุงูุถุงุญู ุงูุซุงูู ุงูุฃููู ุงูุนููู',
  14: 'ุงูุถุงุญู ุงูุฃูู ุงูุฃููู ุงูุนููู',
  13: 'ุงููุงุจ ุงูุฃููู ุงูุนููู',
  12: 'ุงููุงุทุน ุงูุฌุงูุจู ุงูุฃููู ุงูุนููู',
  11: 'ุงููุงุทุน ุงููุฑูุฒู ุงูุฃููู ุงูุนููู',
  21: 'ุงููุงุทุน ุงููุฑูุฒู ุงูุฃูุณุฑ ุงูุนููู',
  22: 'ุงููุงุทุน ุงูุฌุงูุจู ุงูุฃูุณุฑ ุงูุนููู',
  23: 'ุงููุงุจ ุงูุฃูุณุฑ ุงูุนููู',
  24: 'ุงูุถุงุญู ุงูุฃูู ุงูุฃูุณุฑ ุงูุนููู',
  25: 'ุงูุถุงุญู ุงูุซุงูู ุงูุฃูุณุฑ ุงูุนููู',
  26: 'ุงูุทุงุญู ุงูุฃูู ุงูุฃูุณุฑ ุงูุนููู',
  27: 'ุงูุทุงุญู ุงูุซุงูู ุงูุฃูุณุฑ ุงูุนููู',
  28: 'ุงูุทุงุญู ุงูุซุงูุซ ุงูุฃูุณุฑ ุงูุนููู',
  
  // ุงููู ุงูุณููู
  48: 'ุงูุทุงุญู ุงูุซุงูุซ ุงูุฃููู ุงูุณููู',
  47: 'ุงูุทุงุญู ุงูุซุงูู ุงูุฃููู ุงูุณููู',
  46: 'ุงูุทุงุญู ุงูุฃูู ุงูุฃููู ุงูุณููู',
  45: 'ุงูุถุงุญู ุงูุซุงูู ุงูุฃููู ุงูุณููู',
  44: 'ุงูุถุงุญู ุงูุฃูู ุงูุฃููู ุงูุณููู',
  43: 'ุงููุงุจ ุงูุฃููู ุงูุณููู',
  42: 'ุงููุงุทุน ุงูุฌุงูุจู ุงูุฃููู ุงูุณููู',
  41: 'ุงููุงุทุน ุงููุฑูุฒู ุงูุฃููู ุงูุณููู',
  31: 'ุงููุงุทุน ุงููุฑูุฒู ุงูุฃูุณุฑ ุงูุณููู',
  32: 'ุงููุงุทุน ุงูุฌุงูุจู ุงูุฃูุณุฑ ุงูุณููู',
  33: 'ุงููุงุจ ุงูุฃูุณุฑ ุงูุณููู',
  34: 'ุงูุถุงุญู ุงูุฃูู ุงูุฃูุณุฑ ุงูุณููู',
  35: 'ุงูุถุงุญู ุงูุซุงูู ุงูุฃูุณุฑ ุงูุณููู',
  36: 'ุงูุทุงุญู ุงูุฃูู ุงูุฃูุณุฑ ุงูุณููู',
  37: 'ุงูุทุงุญู ุงูุซุงูู ุงูุฃูุณุฑ ุงูุณููู',
  38: 'ุงูุทุงุญู ุงูุซุงูุซ ุงูุฃูุณุฑ ุงูุณููู',
};

// ุฃููุงุน ุงูุชุตุฏูุฑ
export enum ExportFormat {
  JSON = 'json',
  CSV = 'csv',
  PDF = 'pdf'
}

// ุฅุญุตุงุฆูุงุช ุงููุฎุทุท
export interface ChartStatistics {
  totalTeeth: number;
  recordedTeeth: number;
  healthyTeeth: number;
  decayedTeeth: number;
  filledTeeth: number;
  missingTeeth: number;
  urgentCases: number;
  withImages: number;
  lastUpdated?: string;
}
